apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: lambda
  name: lambda
  namespace: support-backlog
spec:
  replicas: 1
  selector:
    matchLabels:
      app: lambda
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: lambda
      namespace: support-backlog
    spec:
      # initContainers:
      # - name: git-clone
      #   image: alpine/git
      #   # https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#use-environment-variables-to-define-arguments
      #   # command: ["git", "clone", "https://$(CR_USER):$(CR_PAT)@github.com/gwright99/aws_lambda.git", "/app"]
      #   command: ["/bin/sh"]
      #   args: ["-c", "git clone https://$(CR_USER):$(CR_PAT)@github.com/gwright99/aws_lambda.git /app  && chmod +x /app/entry_script.sh"]
      #   env:
      #     - name: CR_USER
      #       valueFrom:
      #         secretKeyRef:
      #           name: gh-pat
      #           key: cr_user
      #     - name: CR_PAT
      #       valueFrom:
      #         secretKeyRef:
      #           name: gh-pat
      #           key: cr_pat
      #   volumeMounts:
      #   - name: repo-content
      #     mountPath: /app

      # # Copy the content of WORKDIR to same folder as the git repo
      # - image: gwright99/lambda_py3.11:base
      #   name: app-to-git
      #   command: ["/bin/bash"]
      #   #args: ["-c", "cp -a ./ /tmp/code"]
      #   args: ["-c", "cp -a /var/task/. /tmp/code"]
      #   volumeMounts:
      #   - name: repo-content
      #     mountPath: /tmp/code
      #   resources: {}
      # volumes:
      #   - name: repo-content
      #     emptyDir: {}

      containers:
      - image: gwright99/lambda_py3.11:base
        name: lambda-py3-11
        # command: ["sleep", "300"]
        ports:
        - containerPort: 8080
        env:
          - name: CR_USER
            valueFrom:
              secretKeyRef:
                name: gh-pat
                key: cr_user
          - name: CR_PAT
            valueFrom:
              secretKeyRef:
                name: gh-pat
                key: cr_pat
      #   volumeMounts:
      #   - name: repo-content
      #     mountPath: /var/task
      #   resources: {}
      # volumes:
      #   - name: repo-content
      #     emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: lambda
  name: lambda
  namespace: support-backlog
spec:
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: lambda
status:
  loadBalancer: {}
---
apiVersion: gateway.networking.k8s.io/v1
kind: HTTPRoute
metadata:
  labels:
    example: lambda
  name: lambda
  namespace: support-backlog
spec:
  hostnames:
  - lambda.grahamwrightk8s.net
  parentRefs:
  - group: gateway.networking.k8s.io
    kind: Gateway
    name: public-cloudflare
    namespace: gloo-system
  rules:
  - backendRefs:
    - group: ""
      kind: Service
      name: lambda
      port: 8080
      weight: 1
    matches:
    - path:
        type: PathPrefix
        value: /
